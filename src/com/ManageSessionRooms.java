/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com;


import java.awt.Color;
import static java.lang.Integer.parseInt;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableModel;


/**
 *
 * @author HP
 */
public class ManageSessionRooms extends javax.swing.JFrame {

    /**
     * Creates new form Location
     */
    public ManageSessionRooms() {
        initComponents();
        table_insert();
        table_update();
        load_sessionid();
        load_session_id();
        load_roomname();
        load_consecutive_roomname();
        table_consecutive();
        roomname_NotAvailable();
        //roomtab.getColumnModel().getColumn(0).setPreferredWidth(20);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        cons1 = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        locbox = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        allocate = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        RSS = new javax.swing.JTextArea();
        SS = new javax.swing.JComboBox<>();
        SR = new javax.swing.JComboBox<>();
        jScrollPane5 = new javax.swing.JScrollPane();
        roomtab = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        change = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        RSS1 = new javax.swing.JTextArea();
        jScrollPane7 = new javax.swing.JScrollPane();
        loctab = new javax.swing.JTable();
        SR1 = new javax.swing.JComboBox<>();
        SS2 = new javax.swing.JComboBox<>();
        jPanel6 = new javax.swing.JPanel();
        form = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txtday = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        txtstarthour = new javax.swing.JSpinner();
        jLabel13 = new javax.swing.JLabel();
        txtstartminute = new javax.swing.JSpinner();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        txtendhour = new javax.swing.JSpinner();
        jLabel16 = new javax.swing.JLabel();
        txtendminutes = new javax.swing.JSpinner();
        jLabel17 = new javax.swing.JLabel();
        btn_NotAvailable_Add = new javax.swing.JButton();
        btn_NotAvailable_Update = new javax.swing.JButton();
        btn_NotAvailable_Delete = new javax.swing.JButton();
        NotAvailable_room = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        locationtimetab = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();

        cons1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cons_ID", "Ses_ID", "lec1", "lect2", "extra_lec", "ses_tag", "subject", "sub_code", "grp_ID", "no_of_stdnts", "duration", "room_name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        cons1.setPreferredSize(new java.awt.Dimension(860, 64));
        cons1.setSelectionBackground(new java.awt.Color(89, 39, 74));
        cons1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                consMouseClicked(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 102, 102));
        setBounds(new java.awt.Rectangle(0, 0, 0, 0));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setLocation(new java.awt.Point(0, 0));
        setModalExclusionType(java.awt.Dialog.ModalExclusionType.APPLICATION_EXCLUDE);
        setSize(new java.awt.Dimension(0, 0));

        jPanel2.setBackground(new java.awt.Color(89, 39, 74));
        jPanel2.setName(""); // NOI18N

        jLabel8.setIcon(new javax.swing.ImageIcon("C:\\Users\\HP\\Documents\\netbeans img\\va.jpg")); // NOI18N

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(new javax.swing.border.MatteBorder(null));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.setAlignmentX(6.0F);

        jLabel7.setBackground(new java.awt.Color(0, 0, 102));
        jLabel7.setFont(new java.awt.Font("Calisto MT", 1, 16)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(102, 0, 51));
        jLabel7.setText("MANAGE SESSION ROOMS");

        jTabbedPane1.setBackground(new java.awt.Color(255, 255, 255));
        jTabbedPane1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(51, 0, 51), 2, true));

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 0, 51)));

        locbox.setBackground(new java.awt.Color(255, 255, 255));
        locbox.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(89, 39, 74), 3, true));
        locbox.setForeground(new java.awt.Color(255, 255, 255));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setText("Select Session");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel4.setText("Select Room");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel5.setText("Selected Session");

        jPanel3.setBackground(new java.awt.Color(89, 39, 74));
        jPanel3.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(89, 39, 74), 1, true));

        jLabel2.setBackground(new java.awt.Color(0, 0, 102));
        jLabel2.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Allocate Rooms");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        allocate.setBackground(new java.awt.Color(0, 102, 102));
        allocate.setForeground(new java.awt.Color(255, 255, 255));
        allocate.setText("Allocate");
        allocate.setAlignmentY(0.8F);
        allocate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allocateActionPerformed(evt);
            }
        });

        RSS.setColumns(20);
        RSS.setLineWrap(true);
        RSS.setRows(5);
        RSS.setWrapStyleWord(true);
        jScrollPane3.setViewportView(RSS);

        SS.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));
        SS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SSActionPerformed(evt);
            }
        });

        SR.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));
        SR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SRActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout locboxLayout = new javax.swing.GroupLayout(locbox);
        locbox.setLayout(locboxLayout);
        locboxLayout.setHorizontalGroup(
            locboxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, locboxLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(locboxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, locboxLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18))
                    .addGroup(locboxLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(9, 9, 9)))
                .addGroup(locboxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(SS, 0, 86, Short.MAX_VALUE)
                    .addComponent(SR, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(30, 30, 30))
            .addGroup(locboxLayout.createSequentialGroup()
                .addGroup(locboxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(locboxLayout.createSequentialGroup()
                        .addGap(68, 68, 68)
                        .addComponent(jLabel5))
                    .addGroup(locboxLayout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(locboxLayout.createSequentialGroup()
                        .addGap(83, 83, 83)
                        .addComponent(allocate)))
                .addContainerGap(35, Short.MAX_VALUE))
        );
        locboxLayout.setVerticalGroup(
            locboxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(locboxLayout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(locboxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(SS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(locboxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(SR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(allocate)
                .addGap(19, 19, 19))
        );

        roomtab.setForeground(new java.awt.Color(0, 51, 51));
        roomtab.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                " ID", "Session ID", "Lecturer 1", "Lectutrer 2", "Extra Lecturer", "Session Tag", "Subject", "Subject Code", "Group ID", "Room Name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        roomtab.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        roomtab.setFillsViewportHeight(true);
        roomtab.setGridColor(new java.awt.Color(89, 39, 74));
        roomtab.setSelectionBackground(new java.awt.Color(89, 39, 74));
        roomtab.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                roomtabMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(roomtab);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(locbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 570, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(locbox, javax.swing.GroupLayout.PREFERRED_SIZE, 303, Short.MAX_VALUE))
                .addGap(111, 111, 111))
        );

        jTabbedPane1.addTab("Sessions", jPanel4);
        jPanel4.getAccessibleContext().setAccessibleName("");

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 0, 51)));

        jLabel19.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel19.setText("Select Room");

        change.setBackground(new java.awt.Color(0, 102, 102));
        change.setForeground(new java.awt.Color(255, 255, 255));
        change.setText("Allocate");
        change.setAlignmentY(0.8F);
        change.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeActionPerformed(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel18.setText("Select Session");

        jLabel20.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel20.setText("Selected Session");

        RSS1.setColumns(20);
        RSS1.setLineWrap(true);
        RSS1.setRows(5);
        RSS1.setWrapStyleWord(true);
        jScrollPane4.setViewportView(RSS1);

        loctab.setForeground(new java.awt.Color(0, 51, 51));
        loctab.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                " Consecutive ID", "Session ID", "Lecturer 1", "Lectutrer 2", "Extra Lecturer", "Session Tag", "Subject", "Subject Code", "Group ID", "No Of Students", "Duration", "Room Name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Object.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        loctab.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        loctab.setFillsViewportHeight(true);
        loctab.setGridColor(new java.awt.Color(89, 39, 74));
        loctab.setSelectionBackground(new java.awt.Color(89, 39, 74));
        loctab.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                loctabMouseClicked1(evt);
            }
        });
        jScrollPane7.setViewportView(loctab);

        SR1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));
        SR1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SR1ActionPerformed(evt);
            }
        });

        SS2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));
        SS2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SS2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel18)
                        .addGap(12, 12, 12)
                        .addComponent(SS2, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel19)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(SR1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(21, 21, 21)
                        .addComponent(jLabel20)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 357, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(change)
                        .addGap(18, 18, 18))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jScrollPane7)
                        .addContainerGap())))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel18)
                            .addComponent(jLabel19)
                            .addComponent(jLabel20)
                            .addComponent(SR1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(SS2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(change)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );

        jTabbedPane1.addTab("Consecutive", jPanel5);

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 0, 51)));

        form.setBackground(new java.awt.Color(255, 255, 255));
        form.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(89, 39, 74), 3));
        form.setForeground(new java.awt.Color(255, 255, 255));

        jPanel7.setBackground(new java.awt.Color(89, 39, 74));

        jLabel6.setFont(new java.awt.Font("Calisto MT", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("ADD NOT AVAILABLE TIME");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel10.setText("Room");

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel11.setText("Working day");

        txtday.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday" }));
        txtday.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtdayActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel12.setText("Start time");

        jLabel13.setText("hour");

        jLabel14.setText("minutes");

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel15.setText("End time");

        jLabel16.setText("hour");

        jLabel17.setText("minutes");

        btn_NotAvailable_Add.setBackground(new java.awt.Color(0, 51, 0));
        btn_NotAvailable_Add.setForeground(new java.awt.Color(255, 255, 255));
        btn_NotAvailable_Add.setText("Add");
        btn_NotAvailable_Add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_NotAvailable_AddActionPerformed(evt);
            }
        });

        btn_NotAvailable_Update.setBackground(new java.awt.Color(0, 51, 102));
        btn_NotAvailable_Update.setForeground(new java.awt.Color(255, 255, 255));
        btn_NotAvailable_Update.setText("Update");
        btn_NotAvailable_Update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_NotAvailable_UpdateActionPerformed(evt);
            }
        });

        btn_NotAvailable_Delete.setBackground(new java.awt.Color(153, 0, 51));
        btn_NotAvailable_Delete.setForeground(new java.awt.Color(255, 255, 255));
        btn_NotAvailable_Delete.setText("Delete");
        btn_NotAvailable_Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_NotAvailable_DeleteActionPerformed(evt);
            }
        });

        NotAvailable_room.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NotAvailable_roomActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout formLayout = new javax.swing.GroupLayout(form);
        form.setLayout(formLayout);
        formLayout.setHorizontalGroup(
            formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(formLayout.createSequentialGroup()
                .addGroup(formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, formLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btn_NotAvailable_Add)
                        .addGap(30, 30, 30)
                        .addComponent(btn_NotAvailable_Update)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_NotAvailable_Delete))
                    .addGroup(formLayout.createSequentialGroup()
                        .addGroup(formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(formLayout.createSequentialGroup()
                                .addGap(143, 143, 143)
                                .addGroup(formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txtday, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(NotAvailable_room, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(formLayout.createSequentialGroup()
                                .addGap(37, 37, 37)
                                .addGroup(formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel11)))
                            .addGroup(formLayout.createSequentialGroup()
                                .addGap(99, 99, 99)
                                .addComponent(jLabel15))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, formLayout.createSequentialGroup()
                                .addGap(31, 31, 31)
                                .addGroup(formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(formLayout.createSequentialGroup()
                                        .addComponent(txtendhour, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel16)
                                        .addGap(30, 30, 30)
                                        .addComponent(txtendminutes, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(formLayout.createSequentialGroup()
                                        .addComponent(txtstarthour, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel13)
                                        .addGap(32, 32, 32)
                                        .addComponent(txtstartminute, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 14, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(formLayout.createSequentialGroup()
                .addGap(98, 98, 98)
                .addComponent(jLabel12)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        formLayout.setVerticalGroup(
            formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(formLayout.createSequentialGroup()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(NotAvailable_room, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11)
                    .addComponent(txtday, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel12)
                .addGap(8, 8, 8)
                .addGroup(formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtstarthour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13)
                    .addComponent(txtstartminute, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addGap(14, 14, 14)
                .addComponent(jLabel15)
                .addGap(3, 3, 3)
                .addGroup(formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtendhour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16)
                    .addComponent(txtendminutes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17))
                .addGap(34, 34, 34)
                .addGroup(formLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_NotAvailable_Add)
                    .addComponent(btn_NotAvailable_Update)
                    .addComponent(btn_NotAvailable_Delete))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        locationtimetab.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Room name", "Working day", "Start hour", "Starti minute", "End hour", "End minute"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        locationtimetab.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                locationtimetabMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(locationtimetab);
        if (locationtimetab.getColumnModel().getColumnCount() > 0) {
            locationtimetab.getColumnModel().getColumn(0).setResizable(false);
            locationtimetab.getColumnModel().getColumn(1).setResizable(false);
            locationtimetab.getColumnModel().getColumn(2).setResizable(false);
            locationtimetab.getColumnModel().getColumn(3).setResizable(false);
            locationtimetab.getColumnModel().getColumn(4).setResizable(false);
            locationtimetab.getColumnModel().getColumn(5).setResizable(false);
        }

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(form, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 72, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 487, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(form, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Not Available Times", jPanel6);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel7)
                .addGap(166, 166, 166))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 865, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 380, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("ABC Institute Time Table Management System");

        jButton4.setBackground(new java.awt.Color(255, 255, 255));
        jButton4.setFont(new java.awt.Font("Georgia", 1, 10)); // NOI18N
        jButton4.setIcon(new javax.swing.ImageIcon("C:\\Users\\HP\\Documents\\netbeans img\\home.png")); // NOI18N
        jButton4.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 2, true));
        jButton4.setBorderPainted(false);
        jButton4.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        jButton4.setMaximumSize(new java.awt.Dimension(20, 20));
        jButton4.setMinimumSize(new java.awt.Dimension(20, 20));
        jButton4.setOpaque(false);
        jButton4.setPreferredSize(new java.awt.Dimension(20, 20));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(153, 153, 153)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(jLabel9))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(20, Short.MAX_VALUE))
            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
      Connection con;
      PreparedStatement insert;
    
      
   
      
      
// ******************************************* Retrieve session id into the combo box from session table ***************************      
      private void load_sessionid(){
        
        
        try {
            Class.forName("com.mysql.jdbc.Driver");
            
            con= DriverManager.getConnection("jdbc:mysql://localhost/university","root","");
            
            insert = con.prepareStatement("select ses_id from session WHERE ses_id NOT IN (SELECT ses_id FROM consecutive)");
            
            ResultSet rs = insert.executeQuery();  
            
            while(rs.next()) {
                
                String Selectsession = rs.getString("ses_id");
                SS.addItem(Selectsession);
                
                 
            }
            
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(AddSession.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(AddSession.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
 //***********************************************************************************************************************************   
    
// ******************************************* Retrieve session id into the combo box from session table under consecutive session***************************      
      private void load_session_id(){
        
        
        try {
            Class.forName("com.mysql.jdbc.Driver");
            
            con= DriverManager.getConnection("jdbc:mysql://localhost/university","root","");
            
            insert = con.prepareStatement("select ses_id from consecutive");
            
            ResultSet rs = insert.executeQuery();  
            
            while(rs.next()) {
                
                String SelectSession = rs.getString("ses_id");
                SR1.addItem(SelectSession);
                
                 
            }
            
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(AddSession.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(AddSession.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
 //***********************************************************************************************************************************   
    
    
    
      
// ******************************************* Retrieve room name into the combo box from room table ***************************      
      private void load_roomname(){
        
        
        try {
            Class.forName("com.mysql.jdbc.Driver");
            
            con= DriverManager.getConnection("jdbc:mysql://localhost/university","root","");
            
            insert = con.prepareStatement("select room_name from room WHERE room_name NOT IN (SELECT room_name FROM consroom)");
            
            ResultSet rs = insert.executeQuery();  
            
            while(rs.next()) {
                
                String Selectroom = rs.getString("room_name");
                SR.addItem(Selectroom);
                
            }
            
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(AddSession.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(AddSession.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
 //***********************************************************************************************************************************   
          
      
      
      // ******************************************* Retrieve room name into the combo box from room table under consecutive session***************************      
      private void load_consecutive_roomname(){
        
        
        try {
            Class.forName("com.mysql.jdbc.Driver");
            
            con= DriverManager.getConnection("jdbc:mysql://localhost/university","root","");
            
            insert = con.prepareStatement("select room_name from room");
            
            ResultSet rs = insert.executeQuery();  
            
            while(rs.next()) {
                
                String Selectroom = rs.getString("room_name");
          
                SR1.addItem(Selectroom);
                 
            }
            
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(AddSession.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(AddSession.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
 //***********************************************************************************************************************************   
          
      
      
      
      
      
      

      
      
      

//************************************sessions view**********************************************************
    
        private void table_insert(){
            int l;
            
             try{
                 
                    Class.forName("com.mysql.jdbc.Driver");
                    con = DriverManager.getConnection("jdbc:mysql://localhost/university","root","");
                    //insert = con.prepareStatement("select * From allocate");
                    insert = con.prepareStatement( "SELECT  a.ID, s.ses_id, s.lec1, s.lec2, s.extra_lec, s.ses_tag, s.subject, s.sub_code, s.grp_ID, a.room_name FROM session s, allocate a WHERE  s.ses_id = a.ses_id");
                    ResultSet rs = insert.executeQuery();
                    ResultSetMetaData Rsm = rs.getMetaData();
                    l = Rsm.getColumnCount();
            
                    DefaultTableModel Df = (DefaultTableModel)roomtab.getModel();
                    Df.setRowCount(0);
            
                    while(rs.next()){
                        Vector v = new Vector();
                    
                        for(int a = 1; a<=l; a++)
                        {
                            v.add(rs.getString("ID"));
                            v.add(rs.getString("ses_id"));
                            v.add(rs.getString("lec1"));
                            v.add(rs.getString("lec2"));
                            v.add(rs.getString("extra_lec"));
                            v.add(rs.getString("ses_tag"));
                            v.add(rs.getString("subject"));
                            v.add(rs.getString("sub_code"));
                            v.add(rs.getString("grp_ID"));
                            v.add(rs.getString("room_name"));
                           
                           
                            
                        }
                    
                        Df.addRow(v);
                    
                     }   
             }
             
            catch (ClassNotFoundException ex){
                Logger.getLogger(Location.class.getName()).log(Level.SEVERE, null, ex);
            
            }

            catch (SQLException ex){
             Logger.getLogger(Location.class.getName()).log(Level.SEVERE, null, ex);
            
        }
}
 //************************************view**********************************************************
        
        
        
  
//************************************consecutive sessions view**********************************************************
    
        private void table_consecutive(){
            int l;
            
             try{
                 
                    Class.forName("com.mysql.jdbc.Driver");
                    con = DriverManager.getConnection("jdbc:mysql://localhost/university","root","");
                    insert = con.prepareStatement("SELECT c.consec_ID, r.ses_id, c.lec1, c.lec2, c.extra_lec, c.ses_tag, c.subject, c.sub_code, c.grp_ID, c.no_Stds, c.duration, r.room_name FROM consecutive c, consroom r WHERE  c.ses_id = r.ses_id");
                    ResultSet rs = insert.executeQuery();
                    ResultSetMetaData Rsm = rs.getMetaData();
                    l = Rsm.getColumnCount();
            
                    DefaultTableModel Df = (DefaultTableModel)loctab.getModel();
                    Df.setRowCount(0);
            
                    while(rs.next()){
                        Vector v = new Vector();
                    
                        for(int a = 1; a<=l; a++)
                        {
                            v.add(rs.getString("consec_ID"));
                            v.add(rs.getString("ses_id"));
                            v.add(rs.getString("lec1"));
                            v.add(rs.getString("lec2"));
                            v.add(rs.getString("extra_lec"));
                            v.add(rs.getString("ses_tag"));
                            v.add(rs.getString("subject"));
                            v.add(rs.getString("sub_code"));
                            v.add(rs.getString("grp_ID"));
                            v.add(rs.getString("no_Stds"));
                            v.add(rs.getString("duration"));
                            v.add(rs.getString("room_name"));
                           
                            
                        }
                    
                        Df.addRow(v);
                    
                     }   
             }
             
            catch (ClassNotFoundException ex){
                Logger.getLogger(Location.class.getName()).log(Level.SEVERE, null, ex);
            
            }

            catch (SQLException ex){
             Logger.getLogger(Location.class.getName()).log(Level.SEVERE, null, ex);
            
        }
}
 //************************************view**********************************************************
       
 //-----------------------------------view------------------------------------------------------------
        
     private void table_update(){
            
          int c;
          
          try {
            
            Class.forName("com.mysql.jdbc.Driver");
            
            con= DriverManager.getConnection("jdbc:mysql://localhost/university","root","");
          
            insert = con.prepareStatement("select * From notavailableroom");
            
            ResultSet rs = insert.executeQuery();  
            ResultSetMetaData Rss = rs.getMetaData();
            c = Rss.getColumnCount();
            
            DefaultTableModel Df = (DefaultTableModel)locationtimetab.getModel();
            Df.setRowCount(0);
            
            while(rs.next()) {
                
                Vector v2 = new Vector();
                
                for(int a=1; a<=c; a++) {
                    
                    v2.add(rs.getString("room_name"));
                    v2.add(rs.getString("workingday"));
                    v2.add(rs.getInt("NotAvailable_start_hr"));
                    v2.add(rs.getInt("NotAvailable_start_min"));
                    v2.add(rs.getInt("NotAvailable_end_hr"));
                    v2.add(rs.getInt("NotAvailable_end_min"));
                    
                }
                
                Df.addRow(v2);
                  
            }
         
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ManageSessionRooms.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(ManageSessionRooms.class.getName()).log(Level.SEVERE, null, ex);
        }
          
            
        } 
      
 //-----------------------------------view------------------------------------------------------------
     
 //-----------------------------------view------------------------------------------------------------
     
     private void roomname_NotAvailable(){
        
        
        try {
            Class.forName("com.mysql.jdbc.Driver");
            
            con= DriverManager.getConnection("jdbc:mysql://localhost/university","root","");
            
            insert = con.prepareStatement("select room_name from room");
            
            ResultSet rs = insert.executeQuery();  
            
            while(rs.next()) {
                
                String Selectroom = rs.getString("room_name");
                NotAvailable_room.addItem(Selectroom);
                 
            }
            
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ManageSessionRooms.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(ManageSessionRooms.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
     
 //-----------------------------------view------------------------------------------------------------ 
     
    
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:home button
         dashboardnw dbn = new dashboardnw();
        dbn.show();
        dispose();
        
    }//GEN-LAST:event_jButton4ActionPerformed

//GEN-FIRST:event_jButton1ActionPerformed
 
//GEN-LAST:event_jButton1ActionPerformed
//*************************************************************************insert room for sessions********************//
    private void allocateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allocateActionPerformed
        // TODO add your handling code here:
        String select_session = SS.getSelectedItem().toString();
        String select_room = SR.getSelectedItem().toString();
        
        
      
        try{
            
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost/university","root","");
            insert = con.prepareStatement("insert into allocate (ses_id,room_name) values(?,?) ");
            insert.setString(1, select_session);
            insert.setString(2, select_room);
            
          
            insert.executeUpdate();
            
            JOptionPane.showMessageDialog(this, "Successfully Added");
            table_insert();
            
            SS.setSelectedIndex(0);
            SR.setSelectedIndex(0);
          
           
            SS.requestFocus();
            
            
        }
        catch (ClassNotFoundException ex){
            Logger.getLogger(Location.class.getName()).log(Level.SEVERE, null, ex);
            
        }

         catch (SQLException ex){
            Logger.getLogger(Location.class.getName()).log(Level.SEVERE, null, ex);
            
        }
    }//GEN-LAST:event_allocateActionPerformed
//*************************************************************************insert room for sessions********************//
 
    
    
    
    
    
    
    
    
     //**********************************retrieve all the details into text area to double check based on session id of session table**************************//                                            

    
    
    private void txtdayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtdayActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtdayActionPerformed

    private boolean ID_validateFields(){
      
        if(NotAvailable_room.getSelectedItem().toString() == "")
        {
            JOptionPane.showMessageDialog(this,"Select the relevant room_name for the session time allocation");
            NotAvailable_room.requestFocus();
           
            return false;
        }
        
        if(txtday.getSelectedItem().toString() == ""){
            JOptionPane.showMessageDialog(this,"Select the relevant working day for the session time allocation");
            txtday.requestFocus();
           
            return false;
        }
        
        if((Integer)txtstarthour.getValue() == 0)
        {
            JOptionPane.showMessageDialog(this,"Enter the hour of the starting time for the session time allocation");
            txtstarthour.requestFocus();
           
            return false;
        }
        
        if((Integer)txtendhour.getValue() == 0)
        {
            JOptionPane.showMessageDialog(this,"Enter the hour of the end time for the session time allocation");
            txtendhour.requestFocus();
           
            return false;
        }
        
        return true;
    }
    
    private void btn_NotAvailable_AddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_NotAvailable_AddActionPerformed
        // TODO add your handling code here:
        String room_name = NotAvailable_room.getSelectedItem().toString();
        String workingday = txtday.getSelectedItem().toString();
        Integer starthour = (Integer)txtstarthour.getValue();
        Integer startminute = (Integer)txtstartminute.getValue();
        Integer endhour = (Integer)txtendhour.getValue();
        Integer endminute = (Integer)txtendminutes.getValue();
        
        try{
            
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost/university","root","");
            insert = con.prepareStatement("insert into notavailableroom (room_name,workingday,NotAvailable_start_hr,NotAvailable_start_min,NotAvailable_end_hr,NotAvailable_end_min)values(?,?,?,?,?,?)");
            
            insert.setString(1, room_name);
            insert.setString(2, workingday);
            insert.setInt(3, starthour);
            insert.setInt(4, startminute);
            insert.setInt(5, endhour);
            insert.setInt(6, endminute);
            
            insert.executeUpdate();
            
            JOptionPane.showMessageDialog(this, "Successfully not available time inserted for the location");
            table_update();
            
            // To clear the rcords in the form
            NotAvailable_room.setSelectedIndex(0);
            txtday.setSelectedIndex(0);
            txtstarthour.setValue(0);
            txtstartminute.setValue(0);
            txtendhour.setValue(0);
            txtendminutes.setValue(0);
            NotAvailable_room.requestFocus(); 
            
            
        }catch (ClassNotFoundException ex) {
            Logger.getLogger(ManageSessionRooms.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(ManageSessionRooms.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_btn_NotAvailable_AddActionPerformed

    private void NotAvailable_roomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NotAvailable_roomActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NotAvailable_roomActionPerformed

    private void btn_NotAvailable_DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_NotAvailable_DeleteActionPerformed
        // TODO add your handling code here:
        TableModel model = locationtimetab.getModel();
        int j = locationtimetab.getSelectedRow();   // to get the data in form when the row is selected
        
        if(j == -1){
            JOptionPane.showMessageDialog(this,"Select the location from the table you want to delete");
        }
        
        else{
        try {

            String room_name = NotAvailable_room.getSelectedItem().toString();
            
            int dialogResult = JOptionPane.showConfirmDialog(null,"Do you want to delete this record of Not Available time for location ?","Warning",JOptionPane.YES_NO_OPTION);

            if (dialogResult == JOptionPane.YES_OPTION) {

                Class.forName("com.mysql.jdbc.Driver");

                con= DriverManager.getConnection("jdbc:mysql://localhost/university","root","");

                insert = con.prepareStatement("delete from notavailableroom where room_name=? ");

                insert.setString(1, room_name);

                insert.executeUpdate();

                JOptionPane.showMessageDialog(this,"record of Not Available time for location is Deleted");
                table_update();

                // To clear the rcords in the form
                NotAvailable_room.setSelectedIndex(0);
                txtday.setSelectedIndex(0);
                txtstarthour.setValue(0);
                txtstartminute.setValue(0);
                txtendhour.setValue(0);
                txtendminutes.setValue(0);
                NotAvailable_room.requestFocus(); 

            }

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ManageSessionRooms.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(ManageSessionRooms.class.getName()).log(Level.SEVERE, null, ex);
        }
       
      }
    }//GEN-LAST:event_btn_NotAvailable_DeleteActionPerformed

    private void btn_NotAvailable_UpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_NotAvailable_UpdateActionPerformed
        // TODO add your handling code here:
        TableModel model = locationtimetab.getModel();
        int j = locationtimetab.getSelectedRow();   // to get the data in form when the row is selected
        
        if(j == -1){
            JOptionPane.showMessageDialog(this,"Select the location from the table you want to update");
        }
        
        else{
        try {

            String room_name = NotAvailable_room.getSelectedItem().toString();
            String workingday = txtday.getSelectedItem().toString();
            Integer starthour = (Integer)txtstarthour.getValue();
            Integer startminute = (Integer)txtstartminute.getValue();
            Integer endhour = (Integer)txtendhour.getValue();
            Integer endminute = (Integer)txtendminutes.getValue();
            
            int dialogResult = JOptionPane.showConfirmDialog(null,"Do you want to update this record of Not Available time for location ?","Warning",JOptionPane.YES_NO_OPTION);

            if (dialogResult == JOptionPane.YES_OPTION) {

                Class.forName("com.mysql.jdbc.Driver");

                con= DriverManager.getConnection("jdbc:mysql://localhost/university","root","");

                insert = con.prepareStatement("update notavailableroom set workingday=?, NotAvailable_start_hr=?, NotAvailable_start_min=?, NotAvailable_end_hr=?, NotAvailable_end_min=? where room_name=? ");

                insert.setString(1, workingday);
                insert.setInt(2, starthour);
                insert.setInt(3, startminute);
                insert.setInt(4, endhour);
                insert.setInt(5, endminute);
                insert.setString(6, room_name);

                insert.executeUpdate();

                JOptionPane.showMessageDialog(this,"record of Not Available time for location is Updated");
                table_update();

                // To clear the rcords in the form
                NotAvailable_room.setSelectedIndex(0);
                txtday.setSelectedIndex(0);
                txtstarthour.setValue(0);
                txtstartminute.setValue(0);
                txtendhour.setValue(0);
                txtendminutes.setValue(0);
                NotAvailable_room.requestFocus(); 

            }

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ManageSessionRooms.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(ManageSessionRooms.class.getName()).log(Level.SEVERE, null, ex);
        }
       
      } 
    }//GEN-LAST:event_btn_NotAvailable_UpdateActionPerformed

    private void locationtimetabMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_locationtimetabMouseClicked
        // TODO add your handling code here:
        TableModel model = locationtimetab.getModel();
        int j = locationtimetab.getSelectedRow();   // to get the data in form when the row is selected
        
        Object o = locationtimetab.getValueAt(j, 0);
        NotAvailable_room.setSelectedItem(o);
        String workingday = model.getValueAt(j, 1).toString();
        switch(workingday){
            case "Monday":
                txtday.setSelectedIndex(1);
                break;
            case "Tuesday":
                txtday.setSelectedIndex(2);
                break;
            case "Wednesday":
                txtday.setSelectedIndex(3);
                break;
            case "Thursday":
                txtday.setSelectedIndex(4);
                break;
            case "Friday":
                txtday.setSelectedIndex(5);
                break;
            case "Saturday":
                txtday.setSelectedIndex(6);
                break;
            case "Sunday":
                txtday.setSelectedIndex(7);
                break;
        }
        txtstarthour.setValue(model.getValueAt(j, 2));
        txtstartminute.setValue(model.getValueAt(j, 3));
        txtendhour.setValue(model.getValueAt(j, 4));
        txtendminutes.setValue(model.getValueAt(j, 5));
        
    }//GEN-LAST:event_locationtimetabMouseClicked

    private void consMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_consMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_consMouseClicked
//***********************************************changing same room to consecutive sessions*****************************//
    private void changeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeActionPerformed
        // TODO add your handling code here:
      String select_session = SR1.getSelectedItem().toString();
        String select_room = SR1.getSelectedItem().toString();
        
        
      
        try{
            
            Class.forName("com.mysql.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost/university","root","");
            insert = con.prepareStatement("insert into consroom (ses_id,room_name) values(?,?) ");
            
            insert.setString(1, select_session);
            insert.setString(2, select_room);
          
            insert.executeUpdate();
            
            JOptionPane.showMessageDialog(this, "Successfully Added");
            table_consecutive();
            
            SR1.setSelectedIndex(0);
            SR1.setSelectedIndex(0);
          
           
            SR1.requestFocus();
            
            
        }
        catch (ClassNotFoundException ex){
            Logger.getLogger(Location.class.getName()).log(Level.SEVERE, null, ex);
            
        }

         catch (SQLException ex){
            Logger.getLogger(Location.class.getName()).log(Level.SEVERE, null, ex);
            
        }           
     
    }//GEN-LAST:event_changeActionPerformed
//***********************************************changing same room to consecutive sessions*****************************//
    
    
    
    private void loctabMouseClicked1(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loctabMouseClicked1

    }//GEN-LAST:event_loctabMouseClicked1

    private void roomtabMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_roomtabMouseClicked

    }//GEN-LAST:event_roomtabMouseClicked

    private void SR1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SR1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SR1ActionPerformed

    private void SS2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SS2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SS2ActionPerformed

    private void SSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SSActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SSActionPerformed

    private void SRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SRActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SRActionPerformed

    
    
    
    
    

 
    
    
    
    
     
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManageSessionRooms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManageSessionRooms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManageSessionRooms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManageSessionRooms.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManageSessionRooms().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> NotAvailable_room;
    private javax.swing.JTextArea RSS;
    private javax.swing.JTextArea RSS1;
    private javax.swing.JComboBox<String> SR;
    private javax.swing.JComboBox<String> SR1;
    private javax.swing.JComboBox<String> SS;
    private javax.swing.JComboBox<String> SS2;
    private javax.swing.JButton allocate;
    private javax.swing.JButton btn_NotAvailable_Add;
    private javax.swing.JButton btn_NotAvailable_Delete;
    private javax.swing.JButton btn_NotAvailable_Update;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton change;
    private javax.swing.JTable cons1;
    private javax.swing.JPanel form;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable locationtimetab;
    private javax.swing.JPanel locbox;
    private javax.swing.JTable loctab;
    private javax.swing.JTable roomtab;
    private javax.swing.JComboBox<String> txtday;
    private javax.swing.JSpinner txtendhour;
    private javax.swing.JSpinner txtendminutes;
    private javax.swing.JSpinner txtstarthour;
    private javax.swing.JSpinner txtstartminute;
    // End of variables declaration//GEN-END:variables
  
}

