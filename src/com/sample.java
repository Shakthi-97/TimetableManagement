/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author USER
 */
public class sample extends javax.swing.JFrame {

    /**
     * Creates new form sample
     */
    public sample() {
        initComponents();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        cons = new javax.swing.JTable();
        saveBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        cons.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Session ID", "Select Lectuter", "Selected Lecturer", "Extra Lecturer", "Tag", "Subject", "Subject Code", "Group ID", "No of Students", "Duration"
            }
        ));
        jScrollPane2.setViewportView(cons);

        saveBtn.setText("Save");
        saveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1004, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(449, 449, 449)
                .addComponent(saveBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 317, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 55, Short.MAX_VALUE)
                .addComponent(saveBtn)
                .addGap(51, 51, 51))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void saveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBtnActionPerformed
        // TODO add your handling code here:
       DefaultTableModel Df = (DefaultTableModel)cons.getModel();
       
       if(Df.getRowCount()==0){
           JOptionPane.showMessageDialog(this, "Table is Empty");
       }else{
           
           String sesid,lec1,lec2,extlec,tag,subj,sucode,grpid,nostd,dura;
          
             
          
          
           try{ 
               Class.forName("com.mysql.cj.jdbc.Driver");

               Connection con= DriverManager.getConnection("jdbc:mysql://localhost/university","root","");
               Integer consec = 0;
                    for(int i=0; i<Df.getRowCount(); i++){
                        sesid = Df.getValueAt(i, 0).toString();
                        lec1 = Df.getValueAt(i, 1).toString();
                        lec2 = Df.getValueAt(i, 2).toString();
                        extlec = Df.getValueAt(i, 3).toString();
                        tag = Df.getValueAt(i, 4).toString();
                        subj = Df.getValueAt(i, 5).toString();
                        sucode = Df.getValueAt(i, 6).toString();
                        grpid = Df.getValueAt(i, 7).toString();
                        nostd = Df.getValueAt(i, 8).toString();
                        dura = Df.getValueAt(i, 9).toString();
                        
                        String query ="insert into consecutive(ses_id, lec1, lec2, extra_lec, ses_tag, subject, sub_code, grp_ID, no_Stds, duration, consecutiveID)values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
                  
                        
                        PreparedStatement prstd = con.prepareStatement(query);
                        prstd.setString(1, sesid);
                        prstd.setString(2, lec1);
                        prstd.setString(3, lec2);
                        prstd.setString(4, extlec);
                        prstd.setString(5, tag);
                        prstd.setString(6, subj);
                        prstd.setString(7, sucode);
                        prstd.setString(8, grpid);
                        prstd.setString(9, nostd);
                        prstd.setString(10, dura);
                        prstd.setInt(11, consec);
                        
                        
                        prstd.execute();
                        
                      consec = consec + 1;  
                    }
                    
                   
                    JOptionPane.showMessageDialog(this, "Data insert successfully");
                    Df.setRowCount(0);
                    
                    
           }catch (ClassNotFoundException ex) {
            Logger.getLogger(sample.class.getName()).log(Level.SEVERE, null, ex);
            }
        
            catch (SQLException ex) {
            Logger.getLogger(sample.class.getName()).log(Level.SEVERE, null, ex);
        }
       }
    }//GEN-LAST:event_saveBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(sample.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(sample.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(sample.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(sample.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new sample().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JTable cons;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton saveBtn;
    // End of variables declaration//GEN-END:variables
}
