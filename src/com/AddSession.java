/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com;

import java.awt.event.KeyEvent;
import java.sql.ResultSetMetaData;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.ResultSet;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import java.awt.Color;
import java.awt.Font;
import javax.swing.JTextField;
import java.awt.event.*;

/**
 *
 * @author siva
 */
public class AddSession extends javax.swing.JFrame {

    /**
     * Creates new form AddSession
     */
    public AddSession() {
        initComponents();
        table_update();
        fill_Lecture_1_Combo();
        fill_Lecture_2_Combo();
        load_subject();
        load_group();
        addPlaceHolderStyle(text_search1);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        locbox = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        btn_Add_Session = new javax.swing.JButton();
        edit_session = new javax.swing.JButton();
        delete_session = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        sel_subcode = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        cmb_sel_lec = new javax.swing.JComboBox<>();
        cmb_sel_tag = new javax.swing.JComboBox<>();
        cmb_sel_grpId = new javax.swing.JComboBox<>();
        sel_extra = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        spin_duration = new javax.swing.JSpinner();
        cmb_sel_lec1 = new javax.swing.JComboBox<>();
        cmb_sel_subject = new javax.swing.JComboBox<>();
        jLabel17 = new javax.swing.JLabel();
        txt_stds = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        JTable = new javax.swing.JTable();
        clear_session = new javax.swing.JButton();
        text_search1 = new javax.swing.JTextField();
        Lecture_Search = new javax.swing.JTextField();
        Btn_Lec_Search = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        add_session = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane2.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        jPanel2.setBackground(new java.awt.Color(89, 39, 74));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(new javax.swing.border.MatteBorder(null));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));

        jLabel7.setBackground(new java.awt.Color(0, 0, 102));
        jLabel7.setFont(new java.awt.Font("Calisto MT", 0, 16)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 102));
        jLabel7.setText("MANAGE SESSIONS");

        locbox.setBackground(new java.awt.Color(255, 255, 255));
        locbox.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(89, 39, 74), 3, true));
        locbox.setForeground(new java.awt.Color(204, 204, 255));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(51, 0, 102));
        jLabel3.setText("LECTURERS & TAGS");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel4.setText("Group ID");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel5.setText("Subject");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(51, 0, 102));
        jLabel6.setText("SUBJECTS & GROUPS");

        btn_Add_Session.setBackground(new java.awt.Color(0, 51, 0));
        btn_Add_Session.setForeground(new java.awt.Color(255, 255, 255));
        btn_Add_Session.setIcon(new javax.swing.ImageIcon("C:\\Users\\siva\\Downloads\\add.png")); // NOI18N
        btn_Add_Session.setText("New Session");
        btn_Add_Session.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_Add_SessionActionPerformed(evt);
            }
        });

        edit_session.setBackground(new java.awt.Color(0, 51, 102));
        edit_session.setForeground(new java.awt.Color(255, 255, 255));
        edit_session.setIcon(new javax.swing.ImageIcon("C:\\Users\\siva\\Downloads\\edit.png")); // NOI18N
        edit_session.setText("Edit");
        edit_session.setAlignmentY(0.8F);
        edit_session.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                edit_sessionActionPerformed(evt);
            }
        });

        delete_session.setBackground(new java.awt.Color(153, 0, 51));
        delete_session.setForeground(new java.awt.Color(255, 255, 255));
        delete_session.setIcon(new javax.swing.ImageIcon("C:\\Users\\siva\\Downloads\\delete.png")); // NOI18N
        delete_session.setText("Delete");
        delete_session.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete_sessionActionPerformed(evt);
            }
        });

        jPanel3.setBackground(new java.awt.Color(89, 39, 74));
        jPanel3.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        jLabel2.setBackground(new java.awt.Color(0, 0, 102));
        jLabel2.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Creating a New Session");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(75, 75, 75))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel10.setText("Select Tag");

        sel_subcode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sel_subcodeActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel11.setText("Select Lecturer");

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel12.setText("Selected Lecturer");

        cmb_sel_lec.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));
        cmb_sel_lec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmb_sel_lecActionPerformed(evt);
            }
        });

        cmb_sel_tag.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "Evaluation", "Lecture", "Practical", "Tutorial", " " }));
        cmb_sel_tag.setMinimumSize(new java.awt.Dimension(32, 20));
        cmb_sel_tag.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmb_sel_tagItemStateChanged(evt);
            }
        });
        cmb_sel_tag.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmb_sel_tagActionPerformed(evt);
            }
        });

        cmb_sel_grpId.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel13.setText("Subject Code");

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel14.setText("Add Extra Lecturers");

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel15.setText("No Of Students");

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel16.setText("Duration");

        spin_duration.setModel(new javax.swing.SpinnerNumberModel(2, 0, 10, 1));

        cmb_sel_lec1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));
        cmb_sel_lec1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmb_sel_lec1ActionPerformed(evt);
            }
        });

        cmb_sel_subject.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));
        cmb_sel_subject.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                cmb_sel_subjectPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        cmb_sel_subject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmb_sel_subjectActionPerformed(evt);
            }
        });

        jLabel17.setText("hour");

        javax.swing.GroupLayout locboxLayout = new javax.swing.GroupLayout(locbox);
        locbox.setLayout(locboxLayout);
        locboxLayout.setHorizontalGroup(
            locboxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(locboxLayout.createSequentialGroup()
                .addGroup(locboxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(locboxLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(locboxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, locboxLayout.createSequentialGroup()
                                .addGroup(locboxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel11)
                                    .addComponent(jLabel12)
                                    .addComponent(cmb_sel_lec, 0, 163, Short.MAX_VALUE)
                                    .addComponent(cmb_sel_lec1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(locboxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel10)
                                    .addGroup(locboxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(cmb_sel_tag, javax.swing.GroupLayout.Alignment.TRAILING, 0, 148, Short.MAX_VALUE)
                                        .addComponent(sel_extra, javax.swing.GroupLayout.Alignment.TRAILING))
                                    .addComponent(jLabel14)))
                            .addGroup(locboxLayout.createSequentialGroup()
                                .addGroup(locboxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(locboxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(cmb_sel_subject, 0, 164, Short.MAX_VALUE)
                                        .addComponent(cmb_sel_grpId, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(locboxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, locboxLayout.createSequentialGroup()
                                        .addGroup(locboxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel15))
                                        .addGap(61, 61, 61))
                                    .addComponent(sel_subcode, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_stds, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(locboxLayout.createSequentialGroup()
                                .addGap(110, 110, 110)
                                .addComponent(jLabel3)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, locboxLayout.createSequentialGroup()
                                .addGroup(locboxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(locboxLayout.createSequentialGroup()
                                        .addComponent(jLabel16)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(spin_duration, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, locboxLayout.createSequentialGroup()
                                        .addGap(11, 11, 11)
                                        .addComponent(btn_Add_Session)
                                        .addGap(18, 18, 18)
                                        .addComponent(edit_session, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(delete_session, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGap(27, 27, 27))))
                    .addGroup(locboxLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(149, 149, 149)))
                .addContainerGap())
        );
        locboxLayout.setVerticalGroup(
            locboxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(locboxLayout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(locboxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(locboxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmb_sel_lec, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmb_sel_tag, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(locboxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(locboxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sel_extra, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmb_sel_lec1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addComponent(jLabel6)
                .addGap(18, 18, 18)
                .addGroup(locboxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(locboxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmb_sel_subject, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sel_subcode, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(locboxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(locboxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmb_sel_grpId, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_stds, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(locboxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spin_duration, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16)
                    .addComponent(jLabel17))
                .addGap(23, 23, 23)
                .addGroup(locboxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(edit_session)
                    .addComponent(delete_session)
                    .addComponent(btn_Add_Session))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        jScrollPane3.setForeground(new java.awt.Color(0, 42, 100));
        jScrollPane3.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane3.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        JTable.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        JTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Session Id", "Select Lecturer", "Selected Lecturer ", "Extra Lecturer(s)", "Tag", "Subject", "Subject Code", "Group ID", "No of Students", "Duration"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        JTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        JTable.setGridColor(new java.awt.Color(89, 39, 74));
        JTable.setSelectionBackground(new java.awt.Color(89, 39, 74));
        JTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JTableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(JTable);
        if (JTable.getColumnModel().getColumnCount() > 0) {
            JTable.getColumnModel().getColumn(1).setPreferredWidth(150);
            JTable.getColumnModel().getColumn(2).setPreferredWidth(150);
            JTable.getColumnModel().getColumn(3).setPreferredWidth(120);
            JTable.getColumnModel().getColumn(4).setResizable(false);
            JTable.getColumnModel().getColumn(4).setPreferredWidth(90);
            JTable.getColumnModel().getColumn(5).setResizable(false);
            JTable.getColumnModel().getColumn(5).setPreferredWidth(165);
            JTable.getColumnModel().getColumn(6).setResizable(false);
            JTable.getColumnModel().getColumn(6).setPreferredWidth(90);
            JTable.getColumnModel().getColumn(7).setResizable(false);
            JTable.getColumnModel().getColumn(7).setPreferredWidth(90);
            JTable.getColumnModel().getColumn(8).setResizable(false);
            JTable.getColumnModel().getColumn(8).setPreferredWidth(100);
            JTable.getColumnModel().getColumn(9).setPreferredWidth(70);
        }

        clear_session.setBackground(new java.awt.Color(204, 0, 0));
        clear_session.setForeground(new java.awt.Color(255, 255, 255));
        clear_session.setIcon(new javax.swing.ImageIcon("C:\\Users\\siva\\Downloads\\clear.png")); // NOI18N
        clear_session.setText("Clear history");
        clear_session.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clear_sessionActionPerformed(evt);
            }
        });

        text_search1.setText("SEARCH HERE....");
        text_search1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                text_search1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                text_search1FocusLost(evt);
            }
        });
        text_search1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                text_search1ActionPerformed(evt);
            }
        });
        text_search1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                text_search1KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                text_search1KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                text_search1KeyTyped(evt);
            }
        });

        Btn_Lec_Search.setBackground(new java.awt.Color(89, 39, 74));
        Btn_Lec_Search.setForeground(new java.awt.Color(255, 255, 255));
        Btn_Lec_Search.setIcon(new javax.swing.ImageIcon("C:\\Users\\siva\\Downloads\\search white.png")); // NOI18N
        Btn_Lec_Search.setText("Search");
        Btn_Lec_Search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_Lec_SearchActionPerformed(evt);
            }
        });

        jLayeredPane1.setLayer(locbox, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jScrollPane3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(clear_session, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(text_search1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(Lecture_Search, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(Btn_Lec_Search, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(locbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(clear_session)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 588, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jLayeredPane1Layout.createSequentialGroup()
                        .addComponent(text_search1, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(Lecture_Search, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Btn_Lec_Search, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jLayeredPane1Layout.createSequentialGroup()
                        .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(text_search1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Lecture_Search, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Btn_Lec_Search))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(clear_session)
                        .addGap(30, 30, 30))
                    .addGroup(jLayeredPane1Layout.createSequentialGroup()
                        .addComponent(locbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(25, 25, 25))))
        );

        jLabel8.setBackground(new java.awt.Color(0, 0, 102));
        jLabel8.setFont(new java.awt.Font("Calisto MT", 1, 16)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(102, 0, 51));
        jLabel8.setText("MANAGE SESSIONS");

        add_session.setBackground(new java.awt.Color(14, 1, 47));
        add_session.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        add_session.setForeground(new java.awt.Color(255, 255, 255));
        add_session.setText(" Sessions");
        add_session.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_sessionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(518, 518, 518)
                        .addComponent(jLabel8)
                        .addGap(214, 214, 214)
                        .addComponent(add_session)
                        .addGap(211, 211, 211)
                        .addComponent(jLabel7))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(19, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(add_session, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("ABC Institute Timetable Management System");

        jLabel1.setIcon(new javax.swing.ImageIcon("C:\\Users\\siva\\Downloads\\va.jpg")); // NOI18N

        jButton5.setIcon(new javax.swing.ImageIcon("C:\\Users\\siva\\Downloads\\home (1).png")); // NOI18N
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1040, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(168, 168, 168)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(jLabel9))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1003, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(242, 242, 242))
        );

        jScrollPane2.setViewportView(jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 780, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmb_sel_tagActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb_sel_tagActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmb_sel_tagActionPerformed

    private void cmb_sel_lecActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb_sel_lecActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmb_sel_lecActionPerformed

    public void addPlaceHolderStyle(JTextField textField ){
        
        Font font = textField.getFont();
        font = font.deriveFont(Font.ITALIC);
        textField.setFont(font);
        textField.setForeground(Color.gray);
     
    }
    
    public void removePlaceHolderStyle(JTextField textField ){
        
        Font font = textField.getFont();
        font = font.deriveFont(Font.PLAIN);
        textField.setFont(font);
        textField.setForeground(Color.black);
       
    }
    

        Connection con1;
        PreparedStatement insert;  
        
        private void table_update(){
    
          int c;
          
          try {
            
            Class.forName("com.mysql.jdbc.Driver");
            
            con1= DriverManager.getConnection("jdbc:mysql://localhost/university","root","");
          
            insert = con1.prepareStatement("select * From session");
            
            ResultSet rs = insert.executeQuery();  
            ResultSetMetaData Rss = rs.getMetaData();
            c = Rss.getColumnCount();
            
            DefaultTableModel Df = (DefaultTableModel)JTable.getModel();
            Df.setRowCount(0);
            
            while(rs.next()) {
                
                Vector v2 = new Vector();
                
                for(int a=1; a<=c; a++) {
                    
                    v2.add(rs.getInt("ses_id"));
                    v2.add(rs.getString("lec1"));
                    v2.add(rs.getString("lec2"));
                    v2.add(rs.getString("extra_lec"));
                    v2.add(rs.getString("ses_tag"));
                    v2.add(rs.getString("subject"));
                    v2.add(rs.getString("sub_code"));
                    v2.add(rs.getString("grp_ID"));
                    v2.add(rs.getString("no_Stds"));
                    v2.add(rs.getInt("duration"));
                    
                }
                
                Df.addRow(v2);
                  
            }
         
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Lecturer.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Lecturer.class.getName()).log(Level.SEVERE, null, ex);
        }
            
        }   
        
        
        
        private boolean Sessions_validateFields(){
        if(cmb_sel_lec.getSelectedItem().toString().equals(" "))
        {
            JOptionPane.showMessageDialog(this,"Select the Lecturer");
            cmb_sel_lec.requestFocus();
            
            return false;
        }
        
        if(cmb_sel_tag.getSelectedItem().toString().equals(" "))
        {
            JOptionPane.showMessageDialog(this,"Select the Tag");
            cmb_sel_tag.requestFocus();
            
            return false;
        }
        
        if(cmb_sel_lec1.getSelectedItem().toString().equals(" "))
        {
            JOptionPane.showMessageDialog(this,"Select the Selected Lecturer");
            cmb_sel_lec1.requestFocus();
            
            return false;
        }
       
        if(sel_extra.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(this,"Add Extra Lecturers if necessary");
            sel_extra.requestFocus();
            
            return false;
        }
        
        if(cmb_sel_subject.getSelectedItem().toString().equals(" "))
        {
            JOptionPane.showMessageDialog(this,"Select the Subject");
            cmb_sel_subject.requestFocus();
            
            return false;
        }
       
        if(cmb_sel_grpId.getSelectedItem().toString().equals(" "))
        {
            JOptionPane.showMessageDialog(this,"Select the Students Group");
            cmb_sel_grpId.requestFocus();
            
            return false;
        }
        
        if(txt_stds.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(this,"Enter the NO of Students for this session");
            txt_stds.requestFocus();
            
            return false;
        }
       
       return true; 
    }
        
        
    
    private void btn_Add_SessionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_Add_SessionActionPerformed
        // TODO add your handling code here:
        
        String Lecturer1 = cmb_sel_lec.getSelectedItem().toString();
        String Lecturer2 = cmb_sel_lec1.getSelectedItem().toString();
        String Add_extra_lec = sel_extra.getText();
        String Tag = cmb_sel_tag.getSelectedItem().toString();
        String Subject = cmb_sel_subject.getSelectedItem().toString();
        String Subject_Code = sel_subcode.getText();
        String Group_ID = cmb_sel_grpId.getSelectedItem().toString();
        String No_Students = txt_stds.getText();
        
        Integer Duration = (Integer)spin_duration.getValue();
        
        if(Sessions_validateFields()) {
        
        try {

            Class.forName("com.mysql.jdbc.Driver");

            con1= DriverManager.getConnection("jdbc:mysql://localhost/university","root","");

            insert = con1.prepareStatement("insert into session(lec1,lec2,extra_lec,ses_tag,subject,sub_code,grp_ID,no_Stds,duration)values(?,?,?,?,?,?,?,?,?)");

            insert.setString(1, Lecturer1);
            insert.setString(2, Lecturer2);
            insert.setString(3, Add_extra_lec);
            insert.setString(4, Tag);
            insert.setString(5, Subject);
            insert.setString(6, Subject_Code);
            insert.setString(7, Group_ID);
            insert.setString(8, No_Students);
            insert.setInt(9, Duration);

            insert.executeUpdate();

            JOptionPane.showMessageDialog(this,"New Session Created");
            table_update();

            
            
            cmb_sel_lec.setSelectedIndex(0); // To clear the rcords in the form
            cmb_sel_lec1.setSelectedIndex(0);
            sel_extra.setText("");
            cmb_sel_tag.setSelectedIndex(0);
            cmb_sel_subject.setSelectedIndex(0);
            sel_subcode.setText("");
            cmb_sel_grpId.setSelectedIndex(0);
            txt_stds.setText("");
            spin_duration.setValue(0);
            cmb_sel_lec.requestFocus();

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Lecturer.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Lecturer.class.getName()).log(Level.SEVERE, null, ex);
        }
     
      } 
    }//GEN-LAST:event_btn_Add_SessionActionPerformed

    private void clear_sessionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clear_sessionActionPerformed
        // TODO add your handling code here:
        
        DefaultTableModel Df = (DefaultTableModel) JTable.getModel();
        // Df.setRowCount(0);

        try {

            int dialogResult = JOptionPane.showConfirmDialog(null,"Do you want to clear all the records ?","Warning",JOptionPane.YES_NO_OPTION);

            if (dialogResult == JOptionPane.YES_OPTION) {

                Class.forName("com.mysql.jdbc.Driver");

                con1= DriverManager.getConnection("jdbc:mysql://localhost/university","root","");

                insert = con1.prepareStatement("Truncate table session");

                insert.executeUpdate();

                JOptionPane.showMessageDialog(this,"All Records got Cleared");
                table_update();

            }

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Lecturer.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Lecturer.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_clear_sessionActionPerformed


    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        
        dashboardnw dbn = new dashboardnw();
        dbn.show();  // display the dashboard
        
        dispose(); //close the current jframe and open the new jframe
        
    }//GEN-LAST:event_jButton5ActionPerformed

    private void JTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JTableMouseClicked
        // TODO add your handling code here:

        DefaultTableModel Df = (DefaultTableModel)JTable.getModel();
        int SelectedIndex = JTable.getSelectedRow();

        Object obj = JTable.getValueAt(JTable.getSelectedRow(), 1);
        cmb_sel_lec.setSelectedItem(obj);
      
        Object obj2 = JTable.getValueAt(JTable.getSelectedRow(), 2);
        cmb_sel_lec1.setSelectedItem(obj2);

        sel_extra.setText(Df.getValueAt(SelectedIndex, 3).toString());

        String Tag = (Df.getValueAt(SelectedIndex, 4).toString());
        switch(Tag){

            case "select":
            cmb_sel_tag.setSelectedIndex(0);
            break;

            case "Evaluation":
            cmb_sel_tag.setSelectedIndex(1);
            break;

            case "Lecture":
            cmb_sel_tag.setSelectedIndex(2);
            break;

            case "Practical":
            cmb_sel_tag.setSelectedIndex(3);
            break;

            case "Tutorial":
            cmb_sel_tag.setSelectedIndex(4);
            break;

        }
       
       

        
        Object obj3 = JTable.getValueAt(JTable.getSelectedRow(), 5);
        cmb_sel_subject.setSelectedItem(obj3);
      
        sel_subcode.setText(Df.getValueAt(SelectedIndex, 6).toString());
        
        Object obj4 = JTable.getValueAt(JTable.getSelectedRow(), 7);
        cmb_sel_grpId.setSelectedItem(obj4);

        txt_stds.setText(Df.getValueAt(SelectedIndex, 8).toString());
        
        spin_duration.setValue((Integer)Df.getValueAt(SelectedIndex, 9)); 
        
    }//GEN-LAST:event_JTableMouseClicked

    private void sel_subcodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sel_subcodeActionPerformed
        // TODO add your handling code here:
      
    }//GEN-LAST:event_sel_subcodeActionPerformed

    private void fill_Lecture_1_Combo(){
        
        
        try {
            Class.forName("com.mysql.jdbc.Driver");
            
            con1= DriverManager.getConnection("jdbc:mysql://localhost/university","root","");
            
            insert = con1.prepareStatement("select * from lecturer");
            
            ResultSet rs = insert.executeQuery();  
            
            while(rs.next()) {
                
                String Lecturer1 = rs.getString("emp_name");
                cmb_sel_lec.addItem(Lecturer1);
                 
            }
            
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(AddSession.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(AddSession.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    
    
    private void fill_Lecture_2_Combo(){
        
        
        try {
            Class.forName("com.mysql.jdbc.Driver");
            
            con1= DriverManager.getConnection("jdbc:mysql://localhost/university","root","");
            
            insert = con1.prepareStatement("select * from lecturer");
            
            ResultSet rs = insert.executeQuery();  
            
            while(rs.next()) {
                
                String Lecturer2 = rs.getString("emp_name");
                cmb_sel_lec1.addItem(Lecturer2);
                 
            }
            
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(AddSession.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(AddSession.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    
   
       
    private void load_subject(){
        
        
        try {
            Class.forName("com.mysql.jdbc.Driver");
            
            con1= DriverManager.getConnection("jdbc:mysql://localhost/university","root","");
            
            insert = con1.prepareStatement("select * from subjects");
            
            ResultSet rs = insert.executeQuery();  
            
            while(rs.next()) {
                
                String Sub_ = rs.getString("subject_name");
                cmb_sel_subject.addItem(Sub_);
                 
            }
            
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(AddSession.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(AddSession.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }

    
    private void load_group(){
        
        
        try {
            Class.forName("com.mysql.jdbc.Driver");
            
            con1= DriverManager.getConnection("jdbc:mysql://localhost/university","root","");
            
            insert = con1.prepareStatement("select subGroupID,GroupID from student");
            
            ResultSet rs = insert.executeQuery();  
            
            while(rs.next()) {
               
                   String group_id = rs.getString("groupID"); 
                   cmb_sel_grpId.addItem(group_id);  
                        
                   String Sub_group_id = rs.getString("subGroupID"); 
                    cmb_sel_grpId.addItem(Sub_group_id);
                    
            }
            
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(AddSession.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(AddSession.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    
    private void cmb_sel_subjectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb_sel_subjectActionPerformed
        // TODO add your handling code here:   
    }//GEN-LAST:event_cmb_sel_subjectActionPerformed

    private void cmb_sel_subjectPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_cmb_sel_subjectPopupMenuWillBecomeInvisible
       
        String temp = (String) cmb_sel_subject.getSelectedItem();
        
        try {
            
            Class.forName("com.mysql.jdbc.Driver");
            
            con1= DriverManager.getConnection("jdbc:mysql://localhost/university","root","");
            
            insert = con1.prepareStatement("select subject_code from subjects where subject_name=? ");
            insert.setString(1, temp);  
            ResultSet rs = insert.executeQuery();
            
            if(rs.next()) {
                 String Sub_code = rs.getString("subject_code");
                 sel_subcode.setText(Sub_code);
            }
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(AddSession.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(AddSession.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_cmb_sel_subjectPopupMenuWillBecomeInvisible

    private void cmb_sel_tagItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmb_sel_tagItemStateChanged
        // TODO add your handling code here:
     
    }//GEN-LAST:event_cmb_sel_tagItemStateChanged

    private void edit_sessionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_edit_sessionActionPerformed
        // TODO add your handling code here:
        
        DefaultTableModel Df = (DefaultTableModel)JTable.getModel();
        
        int SelectedIndex = JTable.getSelectedRow();  // to get the data in form when the row is selected
        
        if(SelectedIndex == -1) {
             JOptionPane.showMessageDialog(this,"Select the Session you want to edit");
         }
        
        else

        try {

            int id = Integer.parseInt(Df.getValueAt(SelectedIndex, 0).toString());

            String Lecturer1 = cmb_sel_lec.getSelectedItem().toString();
            String Lecturer2 = cmb_sel_lec1.getSelectedItem().toString();
            String Add_extra_lec = sel_extra.getText();
            String Tag = cmb_sel_tag.getSelectedItem().toString();
            String Subject = cmb_sel_subject.getSelectedItem().toString();
            String Subject_Code = sel_subcode.getText();
            String Group_ID = cmb_sel_grpId.getSelectedItem().toString();
            String No_Students = txt_stds.getText();
            Integer Duration = (Integer)spin_duration.getValue();

            int dialogResult = JOptionPane.showConfirmDialog(null,"Do you want to update this Session ?","Warning",JOptionPane.YES_NO_OPTION);

            if (dialogResult == JOptionPane.YES_OPTION) {

                Class.forName("com.mysql.jdbc.Driver");

                con1= DriverManager.getConnection("jdbc:mysql://localhost/university","root","");

                insert = con1.prepareStatement("update session set lec1=?, lec2=?, extra_lec=?, ses_tag=?, subject=?, sub_code=?, grp_ID=?, no_Stds=?, duration=? where ses_id=? ");

                
                insert.setString(1, Lecturer1);
                insert.setString(2, Lecturer2);
                insert.setString(3, Add_extra_lec);
                insert.setString(4, Tag);
                insert.setString(5, Subject);
                insert.setString(6, Subject_Code);
                insert.setString(7, Group_ID);
                insert.setString(8, No_Students);
                insert.setInt(9, Duration);
                insert.setInt(10, id);

                insert.executeUpdate();

                JOptionPane.showMessageDialog(this,"Session Updated");
                table_update();
                
                sel_extra.setText("");
                cmb_sel_lec.setSelectedIndex(0); // To clear the rcords in the form
                cmb_sel_lec1.setSelectedIndex(0);
                cmb_sel_tag.setSelectedIndex(0);
                cmb_sel_subject.setSelectedIndex(0);
                cmb_sel_grpId.setSelectedIndex(0);
                sel_subcode.setText("");
                txt_stds.setText("");
                spin_duration.setValue(0);
                cmb_sel_lec.requestFocus();

            }

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Lecturer.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Lecturer.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_edit_sessionActionPerformed

    private void delete_sessionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete_sessionActionPerformed
        // TODO add your handling code here:
        
        DefaultTableModel Df = (DefaultTableModel)JTable.getModel();
        int SelectedIndex = JTable.getSelectedRow();  // to get the data in form when the row is selected
        
        if(SelectedIndex == -1) {
             JOptionPane.showMessageDialog(this,"Select the Session you want to delete");
         }
        
        else

        try {

            int id = Integer.parseInt(Df.getValueAt(SelectedIndex, 0).toString());
            
            int dialogResult = JOptionPane.showConfirmDialog(null,"Do you want to delete this Session ?","Warning",JOptionPane.YES_NO_OPTION);

            if (dialogResult == JOptionPane.YES_OPTION) {

                Class.forName("com.mysql.jdbc.Driver");

                con1= DriverManager.getConnection("jdbc:mysql://localhost/university","root","");

                insert = con1.prepareStatement("delete from session where ses_id=? ");

                insert.setInt(1, id);

                insert.executeUpdate();

                JOptionPane.showMessageDialog(this,"Session Deleted");
                table_update();

                sel_extra.setText("");
                cmb_sel_lec.setSelectedIndex(0); // To clear the rcords in the form
                cmb_sel_lec1.setSelectedIndex(0);
                cmb_sel_tag.setSelectedIndex(0);
                cmb_sel_subject.setSelectedIndex(0);
                cmb_sel_grpId.setSelectedIndex(0);
                sel_subcode.setText("");
                txt_stds.setText("");
                spin_duration.setValue(0);
                cmb_sel_lec.requestFocus();


            }

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Lecturer.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Lecturer.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_delete_sessionActionPerformed

    private void cmb_sel_lec1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb_sel_lec1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmb_sel_lec1ActionPerformed

    private void text_search1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_text_search1KeyPressed
        // TODO add your handling code here:
        
         DefaultTableModel Df = (DefaultTableModel)JTable.getModel();
         TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(Df);
         JTable.setRowSorter(tr); 
         tr.setRowFilter(RowFilter.regexFilter(text_search1.getText().trim())); 
         
    }//GEN-LAST:event_text_search1KeyPressed

    private void text_search1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_text_search1KeyReleased
        // TODO add your handling code here:
        
         DefaultTableModel Df = (DefaultTableModel)JTable.getModel();
         TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(Df);
         JTable.setRowSorter(tr); 
         tr.setRowFilter(RowFilter.regexFilter(text_search1.getText().trim()));
    }//GEN-LAST:event_text_search1KeyReleased

    private void text_search1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_text_search1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_text_search1ActionPerformed

    private void text_search1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_text_search1KeyTyped
        // TODO add your handling code here:

    }//GEN-LAST:event_text_search1KeyTyped

    private void text_search1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_text_search1FocusGained
        // TODO add your handling code here:
        
        if(text_search1.getText().equals("SEARCH HERE....")){
            
            text_search1.setText(null);
            text_search1.requestFocus();
            removePlaceHolderStyle(text_search1);
     
        }
    }//GEN-LAST:event_text_search1FocusGained

    private void text_search1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_text_search1FocusLost
        // TODO add your handling code here:
        
        if(text_search1.getText().length()==0){
           
            addPlaceHolderStyle(text_search1);
            text_search1.setText("SEARCH HERE....");
            
        }
    }//GEN-LAST:event_text_search1FocusLost

    
     private boolean validate_Search (){
        
        if(Lecture_Search.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(this,"Enter the Student Group you want to Search");  
            Lecture_Search.requestFocus();
            return false;
        }
        
       return true; 
    }
    
    private void Btn_Lec_SearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_Lec_SearchActionPerformed
        // TODO add your handling code here:
        
        if(validate_Search ()) {
        
        try {
       
            Class.forName("com.mysql.jdbc.Driver");
            
            con1= DriverManager.getConnection("jdbc:mysql://localhost/university","root","");
            
            insert = con1.prepareStatement("select * From session where grp_ID=?");
            
            insert.setString(1, Lecture_Search.getText());
            ResultSet rs = insert.executeQuery();  
            
            if(rs.next()){
                
                cmb_sel_lec.setSelectedItem(rs.getString("lec1"));    
                cmb_sel_tag.setSelectedItem(rs.getString("ses_tag")); 
                cmb_sel_lec1.setSelectedItem(rs.getString("lec2")); 
                sel_extra.setText(rs.getString("extra_lec"));
                cmb_sel_subject.setSelectedItem(rs.getString("subject")); 
                sel_subcode.setText(rs.getString("sub_code"));
                cmb_sel_grpId.setSelectedItem(rs.getString("grp_ID")); 
                txt_stds.setText(rs.getString("no_Stds"));
                spin_duration.setValue(rs.getInt("duration"));

            }
            
            else {  
                JOptionPane.showMessageDialog(null, "Student Group not Found");  
            }  
                      
             Lecture_Search.setText("");   
            
             
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Lecturer.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Lecturer.class.getName()).log(Level.SEVERE, null, ex);
        }
    }  
        
    }//GEN-LAST:event_Btn_Lec_SearchActionPerformed

    private void add_sessionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_sessionActionPerformed
        // TODO add your handling code here:
        
        SessionsTime sess = new SessionsTime();
        sess.show();  // display the Sessions time Jframe
        
        dispose(); //close the current jframe and open the new jframe
        
    }//GEN-LAST:event_add_sessionActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddSession.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddSession.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddSession.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddSession.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddSession().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Btn_Lec_Search;
    private javax.swing.JTable JTable;
    private javax.swing.JTextField Lecture_Search;
    private javax.swing.JButton add_session;
    private javax.swing.JButton btn_Add_Session;
    private javax.swing.JButton clear_session;
    private javax.swing.JComboBox<String> cmb_sel_grpId;
    private javax.swing.JComboBox<String> cmb_sel_lec;
    private javax.swing.JComboBox<String> cmb_sel_lec1;
    private javax.swing.JComboBox<String> cmb_sel_subject;
    private javax.swing.JComboBox<String> cmb_sel_tag;
    private javax.swing.JButton delete_session;
    private javax.swing.JButton edit_session;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JPanel locbox;
    private javax.swing.JTextField sel_extra;
    private javax.swing.JTextField sel_subcode;
    private javax.swing.JSpinner spin_duration;
    private javax.swing.JTextField text_search1;
    private javax.swing.JTextField txt_stds;
    // End of variables declaration//GEN-END:variables
}
