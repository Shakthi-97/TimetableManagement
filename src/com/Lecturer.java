/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com;

import java.awt.event.KeyEvent;
import java.sql.ResultSetMetaData;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.ResultSet;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
/**
 *
 * @author siva
 */
public class Lecturer extends javax.swing.JFrame {

    /**
     * Creates new form Lecturer
     */
    public Lecturer() {
        initComponents();
        table_update();
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        JTable = new javax.swing.JTable();
        locbox = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtname = new javax.swing.JTextField();
        txtid = new javax.swing.JTextField();
        btn_addlec = new javax.swing.JButton();
        btnedit = new javax.swing.JButton();
        btndelete = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        txtrank = new javax.swing.JTextField();
        cmb_fac = new javax.swing.JComboBox<>();
        cmb_dep = new javax.swing.JComboBox<>();
        cmb_cen = new javax.swing.JComboBox<>();
        cmb_build = new javax.swing.JComboBox<>();
        cmb_lvl = new javax.swing.JComboBox<>();
        btnrank = new javax.swing.JButton();
        showMsg_lbl = new javax.swing.JLabel();
        clear_employee = new javax.swing.JButton();
        txtfilter = new javax.swing.JTextField();
        btn_search = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        home_btn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setSize(new java.awt.Dimension(0, 0));

        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane2.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        jPanel2.setBackground(new java.awt.Color(89, 39, 74));
        jPanel2.setPreferredSize(new java.awt.Dimension(1040, 991));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(new javax.swing.border.MatteBorder(null));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.setToolTipText("");

        jLabel7.setBackground(new java.awt.Color(0, 0, 102));
        jLabel7.setFont(new java.awt.Font("Calisto MT", 1, 16)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(102, 0, 51));
        jLabel7.setText("MANAGE EMPLOYEES");

        jScrollPane3.setForeground(new java.awt.Color(0, 42, 100));
        jScrollPane3.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane3.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        JTable.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        JTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Employee Name", "Employee ID", "Faculty", "Department", "Center", "Building", "Level", "Rank"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        JTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        JTable.setGridColor(new java.awt.Color(89, 39, 74));
        JTable.setSelectionBackground(new java.awt.Color(89, 39, 74));
        JTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JTableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(JTable);
        if (JTable.getColumnModel().getColumnCount() > 0) {
            JTable.getColumnModel().getColumn(0).setPreferredWidth(50);
            JTable.getColumnModel().getColumn(1).setPreferredWidth(150);
            JTable.getColumnModel().getColumn(2).setResizable(false);
            JTable.getColumnModel().getColumn(2).setPreferredWidth(120);
            JTable.getColumnModel().getColumn(3).setPreferredWidth(120);
            JTable.getColumnModel().getColumn(4).setResizable(false);
            JTable.getColumnModel().getColumn(4).setPreferredWidth(150);
            JTable.getColumnModel().getColumn(6).setPreferredWidth(100);
        }

        locbox.setBackground(new java.awt.Color(255, 255, 255));
        locbox.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(89, 39, 74), 3, true));
        locbox.setForeground(new java.awt.Color(255, 255, 255));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setText("Employee Name");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel4.setText("Employee ID");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel5.setText("Faculty");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel6.setText("Department");

        txtname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtnameActionPerformed(evt);
            }
        });

        txtid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtidActionPerformed(evt);
            }
        });
        txtid.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtidKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtidKeyReleased(evt);
            }
        });

        btn_addlec.setBackground(new java.awt.Color(0, 51, 0));
        btn_addlec.setForeground(new java.awt.Color(255, 255, 255));
        btn_addlec.setIcon(new javax.swing.ImageIcon("C:\\Users\\siva\\Downloads\\add.png")); // NOI18N
        btn_addlec.setText(" New Employee");
        btn_addlec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_addlecActionPerformed(evt);
            }
        });

        btnedit.setBackground(new java.awt.Color(0, 51, 102));
        btnedit.setForeground(new java.awt.Color(255, 255, 255));
        btnedit.setIcon(new javax.swing.ImageIcon("C:\\Users\\siva\\Downloads\\edit.png")); // NOI18N
        btnedit.setText("Edit");
        btnedit.setAlignmentY(0.8F);
        btnedit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btneditActionPerformed(evt);
            }
        });

        btndelete.setBackground(new java.awt.Color(153, 0, 51));
        btndelete.setForeground(new java.awt.Color(255, 255, 255));
        btndelete.setIcon(new javax.swing.ImageIcon("C:\\Users\\siva\\Downloads\\delete.png")); // NOI18N
        btndelete.setText("Delete");
        btndelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndeleteActionPerformed(evt);
            }
        });

        jPanel3.setBackground(new java.awt.Color(89, 39, 74));
        jPanel3.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(89, 39, 74), 1, true));

        jLabel2.setBackground(new java.awt.Color(0, 0, 102));
        jLabel2.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Add Employees");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(101, 101, 101)
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addContainerGap())
        );

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel10.setText("Center");

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel11.setText("Building");

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel12.setText("Level");

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel13.setText("Rank");

        txtrank.addMouseWheelListener(new java.awt.event.MouseWheelListener() {
            public void mouseWheelMoved(java.awt.event.MouseWheelEvent evt) {
                txtrankMouseWheelMoved(evt);
            }
        });
        txtrank.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtrankActionPerformed(evt);
            }
        });

        cmb_fac.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "Computing", "Engineering", "Business ", "Humanities & Sciences", "School of Architecture", "School of Law", " ", " ", " " }));

        cmb_dep.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "Information Technology", "Software Engineering", "Interactive Media", "Data Science", "Cyber Security", "IT - Curtin", "Computer Systems & Network Engineering", "Information Systems Engineering" }));

        cmb_cen.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "Malabe", "Metropolitan", "Kandy", "Matara", "Kurunagela", "Jaffna", " ", " ", " " }));

        cmb_build.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "New Building", "A Block", "B Block", "C Block", "D Block", "E Block", "F Block", " " }));

        cmb_lvl.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " ", "1", "2", "3", "4", "5", "6", " " }));
        cmb_lvl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmb_lvlActionPerformed(evt);
            }
        });

        btnrank.setBackground(new java.awt.Color(0, 102, 204));
        btnrank.setForeground(new java.awt.Color(255, 255, 255));
        btnrank.setIcon(new javax.swing.ImageIcon("C:\\Users\\siva\\Downloads\\gen 1 white.png")); // NOI18N
        btnrank.setText("Generate ");
        btnrank.setToolTipText("Click to Generate the Rank");
        btnrank.setAlignmentY(0.8F);
        btnrank.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnrankActionPerformed(evt);
            }
        });

        showMsg_lbl.setFont(new java.awt.Font("Yu Gothic UI", 0, 10)); // NOI18N
        showMsg_lbl.setPreferredSize(new java.awt.Dimension(70, 25));

        javax.swing.GroupLayout locboxLayout = new javax.swing.GroupLayout(locbox);
        locbox.setLayout(locboxLayout);
        locboxLayout.setHorizontalGroup(
            locboxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(locboxLayout.createSequentialGroup()
                .addGroup(locboxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(locboxLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(locboxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(showMsg_lbl, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(locboxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(locboxLayout.createSequentialGroup()
                                    .addGroup(locboxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel6)
                                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(40, 40, 40)
                                    .addGroup(locboxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(cmb_fac, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(cmb_dep, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(cmb_cen, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(cmb_build, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(cmb_lvl, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, locboxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(locboxLayout.createSequentialGroup()
                                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtid, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(locboxLayout.createSequentialGroup()
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(26, 26, 26)
                                        .addComponent(txtname, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addGroup(locboxLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel13)
                        .addGap(18, 18, 18)
                        .addComponent(btnrank)
                        .addGap(18, 18, 18)
                        .addComponent(txtrank, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(locboxLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(btn_addlec, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnedit, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btndelete, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        locboxLayout.setVerticalGroup(
            locboxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(locboxLayout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addGroup(locboxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtname, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(locboxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtid, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(showMsg_lbl, javax.swing.GroupLayout.PREFERRED_SIZE, 9, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(locboxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(cmb_fac, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(locboxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(cmb_dep, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(locboxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmb_cen, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addGap(18, 18, 18)
                .addGroup(locboxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmb_build, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addGap(18, 18, 18)
                .addGroup(locboxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmb_lvl, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(locboxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtrank, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnrank))
                .addGap(18, 18, 18)
                .addGroup(locboxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btndelete)
                    .addComponent(btnedit)
                    .addComponent(btn_addlec))
                .addGap(51, 51, 51))
        );

        clear_employee.setBackground(new java.awt.Color(204, 0, 0));
        clear_employee.setForeground(new java.awt.Color(255, 255, 255));
        clear_employee.setIcon(new javax.swing.ImageIcon("C:\\Users\\siva\\Downloads\\clear.png")); // NOI18N
        clear_employee.setText("Clear History");
        clear_employee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clear_employeeActionPerformed(evt);
            }
        });

        txtfilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtfilterActionPerformed(evt);
            }
        });
        txtfilter.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtfilterKeyReleased(evt);
            }
        });

        btn_search.setBackground(new java.awt.Color(89, 39, 74));
        btn_search.setForeground(new java.awt.Color(255, 255, 255));
        btn_search.setIcon(new javax.swing.ImageIcon("C:\\Users\\siva\\Downloads\\search white.png")); // NOI18N
        btn_search.setText("Search");
        btn_search.setBorder(null);
        btn_search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_searchActionPerformed(evt);
            }
        });

        jLayeredPane1.setLayer(jScrollPane3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(locbox, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(clear_employee, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(txtfilter, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(btn_search, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jLayeredPane1Layout.createSequentialGroup()
                        .addComponent(locbox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(26, 26, 26)
                        .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 588, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane1Layout.createSequentialGroup()
                                .addComponent(txtfilter, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn_search, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(8, 8, 8))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jLayeredPane1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(clear_employee)))
                .addContainerGap())
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_search, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtfilter, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3)
                    .addComponent(locbox, javax.swing.GroupLayout.PREFERRED_SIZE, 502, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(clear_employee)
                .addGap(13, 13, 13))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(474, 474, 474)
                .addComponent(jLabel7)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(210, 210, 210))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(150, 150, 150))
        );

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("ABC Institute Timetable Management System");

        jLabel1.setIcon(new javax.swing.ImageIcon("C:\\Users\\siva\\Downloads\\va.jpg")); // NOI18N

        home_btn.setIcon(new javax.swing.ImageIcon("C:\\Users\\siva\\Downloads\\home (1).png")); // NOI18N
        home_btn.setPreferredSize(new java.awt.Dimension(20, 20));
        home_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                home_btnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 986, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(136, 136, 136)
                        .addComponent(home_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addComponent(jLabel9)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                    .addComponent(home_btn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 629, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jScrollPane2.setViewportView(jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 814, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 2, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
        Connection con1;
        PreparedStatement insert;  
        
        private void table_update(){
            
          int c;
          
          try {
            
            Class.forName("com.mysql.jdbc.Driver");
            
            // con1= DriverManager.getConnection("jdbc:mysql://localhost/university","root","");
            //String url ="jdbc:mysql://timetable-40.mysql.database.azure.com:3306/{university}?useSSL=true&requireSSL=true";
            con1= DriverManager.getConnection("jdbc:mysql://timetable-40.mysql.database.azure.com:3306/university?serverTimezone=UTC", "Janany@timetable-40", "pamathy@25");
          
            insert = con1.prepareStatement("select * From lecturer");
            
            ResultSet rs = insert.executeQuery();  
            ResultSetMetaData Rss = rs.getMetaData();
            c = Rss.getColumnCount();
            
            DefaultTableModel Df = (DefaultTableModel)JTable.getModel();
            Df.setRowCount(0);
            
            while(rs.next()) {
                
                Vector v2 = new Vector();
                
                for(int a=1; a<=c; a++) {
                    
                    v2.add(rs.getString("id"));
                    v2.add(rs.getString("emp_name"));
                    v2.add(rs.getString("emp_id"));
                    v2.add(rs.getString("faculty"));
                    v2.add(rs.getString("department"));
                    v2.add(rs.getString("center"));
                    v2.add(rs.getString("building"));
                    v2.add(rs.getString("level"));
                    v2.add(rs.getString("rank"));
                    
                }
                
                Df.addRow(v2);
                  
            }
         
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Lecturer.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Lecturer.class.getName()).log(Level.SEVERE, null, ex);
        }
          
            
        }
        
  
    
    private void btnrankActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnrankActionPerformed
        // TODO add your handling code here:

        String EmployeeID = txtid.getText().toString();
        String Levl = cmb_lvl.getSelectedItem().toString();
        String Rank = txtrank.getText().toString();
        
        if(txtid.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(this,"Enter the Employee ID");
            txtid.requestFocus();
            
        }
        else if (cmb_lvl.getSelectedItem().toString().equals(" "))
        {
            JOptionPane.showMessageDialog(this,"Enter the Employee Level");
            cmb_lvl.requestFocus();
            
        }  
        else
            
        Rank = cmb_lvl.getSelectedItem().toString() + "." + txtid.getText().toString();

        txtrank.setText(Rank);

    }//GEN-LAST:event_btnrankActionPerformed

    private void txtrankMouseWheelMoved(java.awt.event.MouseWheelEvent evt) {//GEN-FIRST:event_txtrankMouseWheelMoved
        // TODO add your handling code here:

    }//GEN-LAST:event_txtrankMouseWheelMoved

    private void btndeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndeleteActionPerformed
        // TODO add your handling code here:

        DefaultTableModel Df = (DefaultTableModel)JTable.getModel();
        int SelectedIndex = JTable.getSelectedRow();  // to get the data in form when the row is selected
        
        if(SelectedIndex == -1) {
             JOptionPane.showMessageDialog(this,"Select the Employee you want to delete");
         }
        
        else

        try {

            int id = Integer.parseInt(Df.getValueAt(SelectedIndex, 0).toString());
            
            int dialogResult = JOptionPane.showConfirmDialog(null,"Do you want to delete this Employee ?","Warning",JOptionPane.YES_NO_OPTION);

            if (dialogResult == JOptionPane.YES_OPTION) {

                Class.forName("com.mysql.jdbc.Driver");

                // con1= DriverManager.getConnection("jdbc:mysql://localhost/university","root","");
                //String url ="jdbc:mysql://timetable-40.mysql.database.azure.com:3306/{university}?useSSL=true&requireSSL=true";
                con1= DriverManager.getConnection("jdbc:mysql://timetable-40.mysql.database.azure.com:3306/university?serverTimezone=UTC", "Janany@timetable-40", "pamathy@25");

                insert = con1.prepareStatement("delete from lecturer where id=? ");

                insert.setInt(1, id);

                insert.executeUpdate();

                JOptionPane.showMessageDialog(this,"Employee Deleted");
                table_update();

                txtname.setText("");
                txtid.setText("");
                cmb_fac.setSelectedIndex(0); // To clear the rcords in the form
                cmb_dep.setSelectedIndex(0);
                cmb_cen.setSelectedIndex(0);
                cmb_build.setSelectedIndex(0);
                cmb_lvl.setSelectedIndex(0);
                txtrank.setText("");
                txtname.requestFocus();

            }

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Lecturer.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Lecturer.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btndeleteActionPerformed

    private void btneditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btneditActionPerformed
        // TODO add your handling code here:

        DefaultTableModel Df = (DefaultTableModel)JTable.getModel();
        
        int SelectedIndex = JTable.getSelectedRow();  // to get the data in form when the row is selected
        
        if(SelectedIndex == -1) {
             JOptionPane.showMessageDialog(this,"Select the Employee you want to edit");
         }
        
        else

        try {

            int id = Integer.parseInt(Df.getValueAt(SelectedIndex, 0).toString());

            String EmployeeName = txtname.getText();
            String EmployeeID = txtid.getText();
            String Faculty = cmb_fac.getSelectedItem().toString();
            String Department = cmb_dep.getSelectedItem().toString();
            String Center = cmb_cen.getSelectedItem().toString();
            String Building = cmb_build.getSelectedItem().toString();
            String Levl = cmb_lvl.getSelectedItem().toString();
            String Rank = txtrank.getText();

            int dialogResult = JOptionPane.showConfirmDialog(null,"Do you want to update this Employee ?","Warning",JOptionPane.YES_NO_OPTION);

            if (dialogResult == JOptionPane.YES_OPTION) {

                Class.forName("com.mysql.jdbc.Driver");

                // con1= DriverManager.getConnection("jdbc:mysql://localhost/university","root","");
                //String url ="jdbc:mysql://timetable-40.mysql.database.azure.com:3306/{university}?useSSL=true&requireSSL=true";
                con1= DriverManager.getConnection("jdbc:mysql://timetable-40.mysql.database.azure.com:3306/university?serverTimezone=UTC", "Janany@timetable-40", "pamathy@25");

                insert = con1.prepareStatement("update lecturer set emp_name=?, emp_id=?, faculty=?, department=?, center=?, building=?, level=?, rank=? where id=? ");

                insert.setString(1, EmployeeName);
                insert.setString(2, EmployeeID);
                insert.setString(3, Faculty);
                insert.setString(4, Department);
                insert.setString(5, Center);
                insert.setString(6, Building);
                insert.setString(7, Levl);
                insert.setString(8, Rank);
                insert.setInt(9, id);

                insert.executeUpdate();

                JOptionPane.showMessageDialog(this,"Employee Updated");
                table_update();

                txtname.setText("");
                txtid.setText("");
                cmb_fac.setSelectedIndex(0); // To clear the rcords in the form
                cmb_dep.setSelectedIndex(0);
                cmb_cen.setSelectedIndex(0);
                cmb_build.setSelectedIndex(0);
                cmb_lvl.setSelectedIndex(0);
                txtrank.setText("");
                txtname.requestFocus();

            }

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Lecturer.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Lecturer.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btneditActionPerformed

    
    private boolean Employee_validateFields(){
       
        if(txtname.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(this,"Enter the Employee Name");
            txtname.requestFocus();
            
            return false;
        }
        
        if(txtid.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(this,"Enter the Employee ID");
             txtid.requestFocus();
            
            return false;
        }
        
         if(cmb_fac.getSelectedItem().toString().equals(" "))
        {
            JOptionPane.showMessageDialog(this,"Select the Faculty");
            cmb_fac.requestFocus();
            
            return false;
        }
         
         if(cmb_dep.getSelectedItem().toString().equals(" "))
        {
            JOptionPane.showMessageDialog(this,"Select the Department");
            cmb_dep.requestFocus();
            
            return false;
        }
        
        if(cmb_cen.getSelectedItem().toString().equals(" "))
        {
            JOptionPane.showMessageDialog(this,"Select the Center");
            cmb_cen.requestFocus();
            
            return false;
        } 
        
        if(cmb_build.getSelectedItem().toString().equals(" "))
        {
            JOptionPane.showMessageDialog(this,"Select the Building");
            cmb_build.requestFocus();
            
            return false;
        }
        
        if(cmb_lvl.getSelectedItem().toString().equals(" "))
        {
            JOptionPane.showMessageDialog(this,"Select the Employee Level");
            cmb_lvl.requestFocus();
            
            return false;
        }
       
        if(txtrank.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(this,"Generate the Rank ");
            txtrank.requestFocus();
            
            return false;
        }
        
       return true; 
    }
    
    private void btn_addlecActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_addlecActionPerformed
        // TODO add your handling code here:

        String EmployeeName = txtname.getText();
        String EmployeeID = txtid.getText();
        String Faculty = cmb_fac.getSelectedItem().toString();
        String Department = cmb_dep.getSelectedItem().toString();
        String Center = cmb_cen.getSelectedItem().toString();
        String Building = cmb_build.getSelectedItem().toString();
        String Levl = cmb_lvl.getSelectedItem().toString();
        String Rank = txtrank.getText();

        if(Employee_validateFields()) {
        
        try {

            Class.forName("com.mysql.jdbc.Driver");

            // con1= DriverManager.getConnection("jdbc:mysql://localhost/university","root","");
            //String url ="jdbc:mysql://timetable-40.mysql.database.azure.com:3306/{university}?useSSL=true&requireSSL=true";
            con1= DriverManager.getConnection("jdbc:mysql://timetable-40.mysql.database.azure.com:3306/university?serverTimezone=UTC", "Janany@timetable-40", "pamathy@25");

            insert = con1.prepareStatement("insert into lecturer(emp_name,emp_id,faculty,department,center,building,level,rank)values(?,?,?,?,?,?,?,?)");

            insert.setString(1, EmployeeName);
            insert.setString(2, EmployeeID);
            insert.setString(3, Faculty);
            insert.setString(4, Department);
            insert.setString(5, Center);
            insert.setString(6, Building);
            insert.setString(7, Levl);
            insert.setString(8, Rank);

            insert.executeUpdate();

            JOptionPane.showMessageDialog(this,"New Employee Added");
            table_update();

            txtname.setText("");
            txtid.setText("");
            cmb_fac.setSelectedIndex(0); // To clear the rcords in the form
            cmb_dep.setSelectedIndex(0);
            cmb_cen.setSelectedIndex(0);
            cmb_build.setSelectedIndex(0);
            cmb_lvl.setSelectedIndex(0);
            txtrank.setText("");
            txtname.requestFocus();

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Lecturer.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Lecturer.class.getName()).log(Level.SEVERE, null, ex);
        }
     
      }   
    
    }//GEN-LAST:event_btn_addlecActionPerformed

    private void txtidKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtidKeyPressed
        // TODO add your handling code here:

        String EmployeeID = txtid.getText();

        //get the lenght of the String
        int length =  EmployeeID.length();

        char c = evt.getKeyChar();

        //check for number 0 - 10
        if(evt.getKeyChar()>='0' && evt.getKeyChar()<='9'){

            //check for lenght more than 6 digit
            if(length<6) {
                //editable true
                txtid.setEditable(true);
                showMsg_lbl.setText("Enter 6 digit number");
            }else{
                // if more than 6 digit and characters - not editable
                txtid.setEditable(false);
                 showMsg_lbl.setText("Enter 6 digit number");
                
            }
   
        }else{

            // now allow the back and delete keys to edit
            if(evt.getExtendedKeyCode()==KeyEvent.VK_BACK_SPACE || evt.getExtendedKeyCode()==KeyEvent.VK_DELETE ) {

                // then allow editable
                txtid.setEditable(true);
            }else{
                // if more than 6 digit - not editable
                txtid.setEditable(false);

            }
        }

    }//GEN-LAST:event_txtidKeyPressed

    private void txtidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtidActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_txtidActionPerformed

    private void txtnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtnameActionPerformed

    private void JTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JTableMouseClicked
        // TODO add your handling code here:

        DefaultTableModel Df = (DefaultTableModel)JTable.getModel();
        int SelectedIndex = JTable.getSelectedRow();

        txtname.setText(Df.getValueAt(SelectedIndex, 1).toString());
        txtid.setText(Df.getValueAt(SelectedIndex, 2).toString());

        String faculty = (Df.getValueAt(SelectedIndex, 3).toString());
        switch(faculty){

            case "select":
            cmb_fac.setSelectedIndex(0);
            break;

            case "Computing":
            cmb_fac.setSelectedIndex(1);
            break;

            case "Engineering":
            cmb_fac.setSelectedIndex(2);
            break;

            case "Business":
            cmb_fac.setSelectedIndex(3);
            break;

            case "Humanities & Sciences":
            cmb_fac.setSelectedIndex(4);
            break;

            case "School of Architecture":
            cmb_fac.setSelectedIndex(5);
            break;

            case "School of Law":
            cmb_fac.setSelectedIndex(6);
            break;

        }

        String department = (Df.getValueAt(SelectedIndex, 4).toString());
        switch(department){

            case "select":
            cmb_dep.setSelectedIndex(0);
            break;

            case "Information Technology":
            cmb_dep.setSelectedIndex(1);
            break;

            case "Software Engineering":
            cmb_dep.setSelectedIndex(2);
            break;

            case "Interactive Media":
            cmb_dep.setSelectedIndex(3);
            break;

            case "Data Science":
            cmb_dep.setSelectedIndex(4);
            break;
            
            case "Cyber Security":
            cmb_dep.setSelectedIndex(5);
            break;

            case "IT - Curtin":
            cmb_dep.setSelectedIndex(6);
            break;

            case "Computer Systems & Network Engineering":
            cmb_dep.setSelectedIndex(7);
            break;

            case "Information Systems Engineering":
            cmb_dep.setSelectedIndex(7);
            break;

        }

        String center = (Df.getValueAt(SelectedIndex, 5).toString());
        switch(center){

            case "select":
            cmb_cen.setSelectedIndex(0);
            break;

            case "Malabe":
            cmb_cen.setSelectedIndex(1);
            break;

            case "Metropolitan":
            cmb_cen.setSelectedIndex(2);
            break;

            case "Kandy":
            cmb_cen.setSelectedIndex(3);
            break;

            case "Matara":
            cmb_cen.setSelectedIndex(4);
            break;

            case "Kurunagela":
            cmb_cen.setSelectedIndex(5);
            break;

            case "Jaffna":
            cmb_cen.setSelectedIndex(6);
            break;

        }

        String Building = (Df.getValueAt(SelectedIndex, 6).toString());
        switch(Building){

            case "select":
            cmb_build.setSelectedIndex(0);
            break;

            case "New Building":
            cmb_build.setSelectedIndex(1);
            break;

            case "A Block":
            cmb_build.setSelectedIndex(2);
            break;

            case "B Block":
            cmb_build.setSelectedIndex(3);
            break;

            case "C Block":
            cmb_build.setSelectedIndex(4);
            break;

            case "D Block":
            cmb_build.setSelectedIndex(5);
            break;

            case "E Block":
            cmb_build.setSelectedIndex(6);
            break;
            
            case "F Block":
            cmb_build.setSelectedIndex(7);
            break;
        }

        String lvel = (Df.getValueAt(SelectedIndex, 7).toString());
        switch(lvel){

            case "select":
            cmb_lvl.setSelectedIndex(0);
            break;

            case "1":
            cmb_lvl.setSelectedIndex(1);
            break;

            case "2":
            cmb_lvl.setSelectedIndex(2);
            break;

            case "3":
            cmb_lvl.setSelectedIndex(3);
            break;

            case "4":
            cmb_lvl.setSelectedIndex(4);
            break;

            case "5":
            cmb_lvl.setSelectedIndex(5);
            break;
            
            case "6":
            cmb_lvl.setSelectedIndex(6);
            break;

        }

        txtrank.setText(Df.getValueAt(SelectedIndex, 8).toString());

    }//GEN-LAST:event_JTableMouseClicked

    private void clear_employeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clear_employeeActionPerformed
        // TODO add your handling code here:

        DefaultTableModel Df = (DefaultTableModel) JTable.getModel();
        // Df.setRowCount(0);

        try {

            int dialogResult = JOptionPane.showConfirmDialog(null,"Do you want to clear all the records ?","Warning",JOptionPane.YES_NO_OPTION);

            if (dialogResult == JOptionPane.YES_OPTION) {

                Class.forName("com.mysql.jdbc.Driver");

                // con1= DriverManager.getConnection("jdbc:mysql://localhost/university","root","");
                //String url ="jdbc:mysql://timetable-40.mysql.database.azure.com:3306/{university}?useSSL=true&requireSSL=true";
                con1= DriverManager.getConnection("jdbc:mysql://timetable-40.mysql.database.azure.com:3306/university?serverTimezone=UTC", "Janany@timetable-40", "pamathy@25");

                insert = con1.prepareStatement("Truncate table lecturer");

                insert.executeUpdate();

                JOptionPane.showMessageDialog(this,"All Records got Cleared");
                table_update();

            }

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Lecturer.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Lecturer.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_clear_employeeActionPerformed

    private void txtfilterKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfilterKeyReleased
        // TODO add your handling code here:
           
    }//GEN-LAST:event_txtfilterKeyReleased

    private void txtfilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtfilterActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfilterActionPerformed

    private boolean validate_Search (){
        
        if(txtfilter.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(this,"Enter the Employee name to Search");   
            return false;
        }
        
       return true; 
    }
    
    private void btn_searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_searchActionPerformed
      
        if(validate_Search ()) {
        
        try {
       
            Class.forName("com.mysql.jdbc.Driver");
            
           // con1= DriverManager.getConnection("jdbc:mysql://localhost/university","root","");
           //String url ="jdbc:mysql://timetable-40.mysql.database.azure.com:3306/{university}?useSSL=true&requireSSL=true";
            con1= DriverManager.getConnection("jdbc:mysql://timetable-40.mysql.database.azure.com:3306/university?serverTimezone=UTC", "Janany@timetable-40", "pamathy@25");
            
            insert = con1.prepareStatement("select * From lecturer where emp_name=?");
            
            insert.setString(1, txtfilter.getText());
            ResultSet rs = insert.executeQuery();  
            
            if(rs.next()){
                
                txtname.setText(rs.getString("emp_name"));   
                txtid.setText(rs.getString("emp_id"));
                cmb_fac.setSelectedItem(rs.getString("faculty"));    
                cmb_dep.setSelectedItem(rs.getString("department")); 
                cmb_cen.setSelectedItem(rs.getString("center")); 
                cmb_build.setSelectedItem(rs.getString("building")); 
                cmb_lvl.setSelectedItem(rs.getString("level")); 
                txtrank.setText(rs.getString("rank"));
            }
            
            else {  
                JOptionPane.showMessageDialog(null, "Employee not Found");  
            }  
                      
             txtfilter.setText("");   
            
             
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Lecturer.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Lecturer.class.getName()).log(Level.SEVERE, null, ex);
        }
    }    
        
    }//GEN-LAST:event_btn_searchActionPerformed

    private void cmb_lvlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb_lvlActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmb_lvlActionPerformed

    private void txtidKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtidKeyReleased
        // TODO add your handling code here:

    }//GEN-LAST:event_txtidKeyReleased

    private void home_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_home_btnActionPerformed
        // TODO add your handling code here:
        
        dashboardnw dbn = new dashboardnw();
        dbn.show();  // display the dashboard
        
        dispose(); //close the current jframe and open the new jframe
    }//GEN-LAST:event_home_btnActionPerformed

    private void txtrankActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtrankActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtrankActionPerformed

    
        
       
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Lecturer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Lecturer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Lecturer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Lecturer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Lecturer().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable JTable;
    private javax.swing.JButton btn_addlec;
    private javax.swing.JButton btn_search;
    private javax.swing.JButton btndelete;
    private javax.swing.JButton btnedit;
    private javax.swing.JButton btnrank;
    private javax.swing.JButton clear_employee;
    private javax.swing.JComboBox<String> cmb_build;
    private javax.swing.JComboBox<String> cmb_cen;
    private javax.swing.JComboBox<String> cmb_dep;
    private javax.swing.JComboBox<String> cmb_fac;
    private javax.swing.JComboBox<String> cmb_lvl;
    private javax.swing.JButton home_btn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JPanel locbox;
    private javax.swing.JLabel showMsg_lbl;
    private javax.swing.JTextField txtfilter;
    private javax.swing.JTextField txtid;
    private javax.swing.JTextField txtname;
    private javax.swing.JTextField txtrank;
    // End of variables declaration//GEN-END:variables
}
